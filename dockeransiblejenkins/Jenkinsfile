node{
    stage('SCM Checkout'){
        git 'https://github.com/mmadsen340/udemy_jenkins_ansible.git'
    }        

    stage('Maven Build'){
        def mvnHome = tool name: 'maven-3', type: 'maven'
        sh "${mvnHome}/bin/mvn -f dockeransiblejenkins/pom.xml clean package"
        }

    stage('SonarQube Analysis') {
        def mvnHome = tool name: 'maven-3', type: 'maven'
        withSonarQubeEnv('mikes_lab_sonarqube') {
          sh "${mvnHome}/bin/mvn -f dockeransiblejenkins/pom.xml sonar:sonar"
            } 
        }
    stage("Quality Gate Status Check"){
            timeout(time: 1, unit: 'HOURS') {
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                    error "Pipeline aborted due to quality gate failure: ${qg.status}"
                }
            } 
        }

    stage('Upload-Package'){
            withAWS(region:'us-east-1',credentials:'artifact_repository') 
            {
                s3Upload(bucket: 'artifact-repository-807271945287', file: 'dockeransiblejenkins/target/dockeransible.war', path: 'dockeransible/')
            }
        }

    stage('Download Approved war file'){
            withAWS(region:'us-east-1',credentials:'artifact_repository') 
            {
                s3Download(bucket: 'artifact-repository-807271945287', file: 'target/', force: true, path: 'dockeransible/')
            }
        }
    
    stage('Docker Build'){
        def DOCKER_TAG = getVersion()
            sh "docker build . -t kammana/hariapp:${DOCKER_TAG}"
        }
}

def getVersion(){
    def commitHash = sh label: '', returnStdout: true, script: 'git rev-parse --short HEAD'
    return commitHash
}